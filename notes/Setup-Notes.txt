
Remote Debugging
----------------
Here are the steps I did to get remote debugging working, including running of the Spock tests from mike-and-conquer-test:

Installed Visual Studio 2015 on remote computer
Got app running from Visual Studio 2015 on remote computer
Followed instructions here to then setup remote debugging:  http://gpriaulx.co/2015/12/visual-studio-2015-remote-debugging/
Set username and password the same on both machines
	(can setup autologin using this:  https://technet.microsoft.com/en-us/library/ee872306.aspx)


Open up the proper Rest endpoints on the Windows box in question, with this command:
	(Run command prompt as administrator)
	netsh http add urlacl url=http://*:11369/ user=mike.a.duvall@gmail.com
		- Need to run this on both local box(for running locally) and remote box(for running remotely)


	You can later delete this permission if needed with:
		netsh http delete urlacl http://*:11369/mac/

	To show permissions:
		netsh http show urlacl

Also need to manually connect to the remote machine before the network connection will work
		Connect to \\192.168.0.146\buildoutput in xyplorer or file explorer

For running mike-and-conquer-test Spock tests against remote instance, need to open up firewall on remote machine:

	Add firewall rule:
		netsh advfirewall firewall add rule name="Open port 11369 for mike-and-conquer remote test running" dir=in action=allow protocol=TCP localport=11369

	To remove the same rule:
		netsh advfirewall firewall delete rule name="Open port 11369 for mike-and-conquer remote test running" protocol=tcp localport=11369


Also, setup local project config to set build output to be the remote machine and to connect to the remote machine when debugging:
* Right click the project name ("mike-and-conquer")
* Select Properties
* On the Build tab, set Ouput Path to:  \\192.168.0.146\buildoutput\ (Or whatever the IP address of the remote machine is)
* On the Debug tab, Check "Use remote machine", and set the value to "192.168.0.146" (Or whatever the IP address of the remote machine is)



Git setup
---------
From command prompt, do:

  git config --global user.email "my email address"
  git config --global user.name "mike-duvall"

Then do practice run of pulling repo into test directory, create and pushing to a test branch.
When you attempt to push to a test branch, it will pop up a GUI asking you to login to git hub.
Do so, then verify the test branch appeared in github


Git Bash setup
--------------
To get TAB to cycle through autocomplete selections
Add:  bind TAB:menu-complete
to ~/.profile 
in Git Bash